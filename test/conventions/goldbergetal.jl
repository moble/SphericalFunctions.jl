raw"""
Formulas and conventions from [Goldberg et al.'s "Spin-``s`` Spherical Harmonics and
``\eth``"](@cite GoldbergEtAl_1967).

The conclusion here is that Goldberg et al.'s ``‚ÇõY‚Çó‚Çò(Œ∏, œï)`` differs from ours by a factor
of ``(-1)^m``, while Goldberg et al.'s ``D ≤‚Çò‚Çö,‚Çò`` differs from ours by a transpose and a
factor of ``(-1)^{m+m'}`` ‚Äî which is equivalent to swapping the order of the arguments as
Euler angles.

"""
@testmodule GoldbergEtAl begin

const ùíæ = im

include("../utilities/naive_factorial.jl")
import .NaiveFactorials: ‚ùó


@doc raw"""
    D(j, m‚Ä≤, m, Œ±, Œ≤, Œ≥)

Eq. (3.9) of [Goldberg et al.](@cite GoldbergEtAl_1967),
implementing
```math
    D^j_{m',m}(\alpha, \beta, \gamma).
```
"""
function D(j, m‚Ä≤, m, Œ±, Œ≤, Œ≥)
    if j < 0
        throw(DomainError("The degree j=$j must be non-negative."))
    end
    if abs(m‚Ä≤) > j
        throw(DomainError("The order abs(m‚Ä≤)=$m‚Ä≤ must be ‚â§ j=$j."))
    end
    if abs(m) > j
        throw(DomainError("The order abs(m)=$m must be ‚â§ j=$j."))
    end

    Œ±, Œ≤, Œ≥ = promote(Œ±, Œ≤, Œ≥)

    # The summation index `r` ranges over all values for which the binomial arguments are
    # valid.
    r‚Çò·µ¢‚Çô = max(0, m+m‚Ä≤)
    r‚Çò‚Çê‚Çì = min(j+m‚Ä≤, j+m)

    sinŒ≤‚ï±2 = sin(Œ≤/2)
    T = typeof(sinŒ≤‚ï±2)

    ‚àöT((j+m)‚ùó * (j-m)‚ùó / ((j+m‚Ä≤)‚ùó * (j-m‚Ä≤)‚ùó)) *
    sum(
        r -> (
            binomial(j+m‚Ä≤, r) * binomial(j-m‚Ä≤, r-m-m‚Ä≤) * (-1)^(j+m‚Ä≤-r)
            * exp(ùíæ*m*Œ±) * cos(Œ≤/2)^(2r-m-m‚Ä≤) * sinŒ≤‚ï±2^(2j-2r+m+m‚Ä≤) * exp(ùíæ*m‚Ä≤*Œ≥)
        ),
        r‚Çò·µ¢‚Çô:r‚Çò‚Çê‚Çì,
        init=complex(zero(T))
    )
end


@doc raw"""
    Y(s, ‚Ñì, m, Œ∏, œï)

Eq. (3.1) of [Goldberg et al.](@cite GoldbergEtAl_1967), implementing
```math
    {}_sY_{\ell,m}(\theta, \phi).
```

Note that there is a difference in conventions between the ``Y`` of Goldberg et al. and
ours, involving a factor of ``(-1)^m``.  This is consistent with the Condon-Shortley phase
convention.

"""
function Y(s, ‚Ñì, m, Œ∏, œï)
    if ‚Ñì < 0
        throw(DomainError("The degree ‚Ñì=$‚Ñì must be non-negative."))
    end
    if abs(m) > ‚Ñì
        throw(DomainError("The order abs(m)=$m must be ‚â§ ‚Ñì=$‚Ñì."))
    end
    if abs(s) > ‚Ñì
        throw(DomainError("The spin abs(s)=$s must be ‚â§ ‚Ñì=$‚Ñì."))
    end

    Œ∏, œï = promote(Œ∏, œï)

    # The summation index `r` ranges over all values for which the binomials are
    # positive.
    r‚Çò·µ¢‚Çô = max(0, m-s)
    r‚Çò‚Çê‚Çì = min(‚Ñì-s, ‚Ñì+m)

    sinŒ∏‚ï±2 = sin(Œ∏/2)
    T = typeof(sinŒ∏‚ï±2)

    let œÄ=big(œÄ), ‚àö=sqrt‚àòT
        ‚àö((‚Ñì+m)‚ùó * (‚Ñì-m)‚ùó * (2‚Ñì+1) / ((‚Ñì+s)‚ùó * (‚Ñì-s)‚ùó * 4œÄ)) *
        sum(
            r -> (
                binomial(‚Ñì-s, r) * binomial(‚Ñì+s, r+s-m) * (-1)^(‚Ñì-r-s)
                * exp(ùíæ*m*œï) * cos(Œ∏/2)^(2r+s-m) * sinŒ∏‚ï±2^(2‚Ñì-2r-s+m)
            ),
            r‚Çò·µ¢‚Çô:r‚Çò‚Çê‚Çì,
            init=complex(zero(T))
        )
    end
end


end  # @testmodule GoldbergEtAl


@testitem "GoldbergEtAl conventions" setup=[Utilities, GoldbergEtAl] begin
    using Random
    using Quaternionic: from_spherical_coordinates

    Random.seed!(1234)
    const T = Float64
    const ‚Ñì‚Çò‚Çê‚Çì = 5
    œµ‚Çê = 2eps(T)
    œµ·µ£ = 50eps(T)

    # Tests for Y(‚Ñì, m, Œ∏, œï)
    const Y = GoldbergEtAl.Y
    for Œ∏ ‚àà Œ≤range(T)
        for œï ‚àà Œ±range(T)

            # Test Eq. (2.6) of [Goldberg et al.](@cite GoldbergEtAl_1967)
            for ‚Ñì ‚àà 0:‚Ñì‚Çò‚Çê‚Çì
                for s ‚àà -‚Ñì:-1
                    for m ‚àà -‚Ñì:‚Ñì
                        @test conj(Y(s, ‚Ñì, m, Œ∏, œï)) ‚âà (-1)^(m+s) * Y(-s, ‚Ñì, -m, Œ∏, œï)
                    end
                end
            end

            # Compare to SphericalFunctions Y
            for s ‚àà -‚Ñì‚Çò‚Çê‚Çì:‚Ñì‚Çò‚Çê‚Çì
                Y‚ÇÅ = ‚Çõùêò(s, ‚Ñì‚Çò‚Çê‚Çì, T, [from_spherical_coordinates(Œ∏, œï)])[1,:]
                Y‚ÇÇ = [(-1)^m * Y(s, ‚Ñì, m, Œ∏, œï) for ‚Ñì ‚àà abs(s):‚Ñì‚Çò‚Çê‚Çì for m ‚àà -‚Ñì:‚Ñì]
                @test Y‚ÇÅ ‚âà Y‚ÇÇ atol=œµ‚Çê rtol=œµ·µ£
            end
        end
    end

    # Tests for D(j, m‚Ä≤, m, Œ±, Œ≤, Œ≥)
    let œµ‚Çê=‚àöœµ·µ£, œµ·µ£=‚àöœµ·µ£, ùíü=GoldbergEtAl.D
        for Œ± ‚àà Œ±range(T)
            for Œ≤ ‚àà Œ≤range(T)
                for Œ≥ ‚àà Œ≥range(T)
                    D = D_matrices(Œ±, Œ≤, Œ≥, ‚Ñì‚Çò‚Çê‚Çì)
                    i = 1
                    for j in 0:‚Ñì‚Çò‚Çê‚Çì
                        for m‚Ä≤ in -j:j
                            for m in -j:j
                                @test (-1)^(m+m‚Ä≤) * ùíü(j, m, m‚Ä≤, Œ±, Œ≤, Œ≥) ‚âà D[i] atol=œµ‚Çê rtol=œµ·µ£
                                @test ùíü(j, m‚Ä≤, m, Œ≥, Œ≤, Œ±) ‚âà D[i] atol=œµ‚Çê rtol=œµ·µ£
                                i += 1
                            end
                        end
                    end
                end
            end
        end
    end
end
