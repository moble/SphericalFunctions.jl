@testset verbose=true "Operators" begin

    function explain(computed, expected, info, T, s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, œµ)
        if ‚ââ(computed, expected, atol=œµ, rtol=œµ)
            @show info T s ‚Ñì‚Çò·µ¢‚Çô ‚Ñì‚Çò‚Çê‚Çì œµ
            comp = copy(computed)
            @. comp[abs(comp)<œµ]=0
            #@show comp expected
            display(comp)
            display(expected)
            println("max_diff = ", maximum(abs, computed .- expected), ";")
            println()
        end
    end

    @testset "Casimir $T" for T ‚àà [Float32, Float64, Double64, BigFloat]
        œµ = 100 * eps(T)
        for s ‚àà -3:3
            for ‚Ñì‚Çò‚Çê‚Çì ‚àà 4:7
                for ‚Ñì‚Çò·µ¢‚Çô ‚àà 0:min(abs(s)+1, ‚Ñì‚Çò‚Çê‚Çì)
                    let L¬≤=L¬≤(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T),
                        Lz=Lz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T),
                        L‚Çä=L‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T),
                        L‚Çã=L‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        L1 = L¬≤
                        L2 = (L‚Çä*L‚Çã .+ L‚Çã*L‚Çä .+ 2Lz*Lz)/2
                        @test L1 ‚âà L2 atol=œµ rtol=œµ
                    end
                    let L¬≤=L¬≤(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T),
                        R¬≤=R¬≤(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        @test L¬≤ ‚âà R¬≤ atol=œµ rtol=œµ
                    end
                    let
                        # R¬≤ = (2Rz¬≤ + R‚ÇäR‚Çã + R‚ÇãR‚Çä)/2
                        R1 = R¬≤(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        R2 = T.(Array(
                            R‚Çä(s+1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T) * R‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            .+ R‚Çã(s-1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T) * R‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            .+ 2Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T) * Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) / 2)
                        explain(R1, R2, "Casimir($s)", T, s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, œµ)
                        @test R1 ‚âà R2 atol=œµ rtol=œµ
                    end
                end
            end
        end
    end

    @testset verbose=false "Formula $T" for T ‚àà [Float32, Float64, Double64, BigFloat]
        œµ = 100 * eps(T)
        @testset "$‚Ñì‚Çò‚Çê‚Çì" for ‚Ñì‚Çò‚Çê‚Çì ‚àà 4:7
            for s in -3:3
                let ‚Ñì‚Çò·µ¢‚Çô = 0
                    ùíØ‚Çä = SSHT(s+1, ‚Ñì‚Çò‚Çê‚Çì; T=T, method="Direct", inplace=false)
                    ùíØ‚Çã = SSHT(s-1, ‚Ñì‚Çò‚Çê‚Çì; T=T, method="Direct", inplace=false)
                    i‚Çä = Yindex(abs(s+1), -abs(s+1), ‚Ñì‚Çò·µ¢‚Çô)
                    i‚Çã = Yindex(abs(s-1), -abs(s-1), ‚Ñì‚Çò·µ¢‚Çô)
                    Y = zeros(Complex{T}, Ysize(‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì))
                    for ‚Ñì in abs(s):‚Ñì‚Çò‚Çê‚Çì
                        for m in -‚Ñì:‚Ñì
                            Y[:] .= zero(T)
                            Y[Yindex(‚Ñì, m, ‚Ñì‚Çò·µ¢‚Çô)] = one(T)
                            √∞Y = ùíØ‚Çä * (√∞(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T) * Y)[i‚Çä:end]
                            Y‚Çä = ùíØ‚Çä * Y[i‚Çä:end]
                            c‚Çä = ‚Ñì < abs(s+1) ? zero(T) : ‚àöT((‚Ñì-s)*(‚Ñì+s+1))
                            explain(√∞Y, c‚Çä * Y‚Çä, "√∞($s, $‚Ñì, $m)", T, s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, œµ)
                            @test √∞Y ‚âà c‚Çä * Y‚Çä atol=œµ rtol=œµ
                            √∞ÃÑY = ùíØ‚Çã * (√∞ÃÑ(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T) * Y)[i‚Çã:end]
                            Y‚Çã = ùíØ‚Çã * Y[i‚Çã:end]
                            c‚Çã = ‚Ñì < abs(s-1) ? zero(T) : -‚àöT((‚Ñì+s)*(‚Ñì-s+1))
                            explain(√∞ÃÑY, c‚Çã * Y‚Çã, "√∞ÃÑ($s, $‚Ñì, $m)", T, s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, œµ)
                            @test √∞ÃÑY ‚âà c‚Çã * Y‚Çã atol=œµ rtol=œµ
                        end
                    end
                end
            end
        end
    end

    @testset verbose=false "Commutators $T" for T ‚àà [Float32, Float64, Double64, BigFloat]
        # [L¬≤, Lz] = 0     [L¬≤, L‚Çä] = 0     [L¬≤, L‚Çã] = 0
        # [R¬≤, Rz] = 0     [R¬≤, R‚Çä] = 0     [R¬≤, R‚Çã] = 0
        # [Lz, L‚Çä] = L‚Çä    [Lz, L‚Çã] = -L‚Çã   [L‚Çä, L‚Çã] = 2Lz
        # [Rz, R‚Çä] = R‚Çä    [Rz, R‚Çã] = -R‚Çã   [R‚Çä, R‚Çã] = 2Rz
        # [Rz, √∞] = -√∞     [Rz, √∞ÃÑ] = √∞ÃÑ      [√∞, √∞ÃÑ] = 2Rz
        œµ = 100 * eps(T)
        @testset "$‚Ñì‚Çò‚Çê‚Çì" for ‚Ñì‚Çò‚Çê‚Çì ‚àà 4:7
            for s in -3:3
                let ‚Ñì‚Çò·µ¢‚Çô = 0
                    Y = zeros(Complex{T}, Ysize(‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì))
                    for O·µ¢ ‚àà [Lz, L‚Çä, L‚Çã, Rz, R‚Çä, R‚Çã]
                        for O¬≤ ‚àà [L¬≤, R¬≤]
                            let O¬≤=O¬≤(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T),
                                O·µ¢=O·µ¢(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                                # [O¬≤, O·µ¢] = 0
                                explain(O¬≤*O·µ¢-O·µ¢*O¬≤, 0*O¬≤, "O¬≤", T, s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, œµ)
                                @test O¬≤*O·µ¢-O·µ¢*O¬≤ ‚âà 0*O¬≤ atol=œµ rtol=œµ
                            end
                        end
                    end
                    let Lz=Array(Lz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)),
                        L‚Çä=Array(L‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)),
                        L‚Çã=Array(L‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T))
                        # [Lz, L‚Çä] = L‚Çä
                        @test Lz*L‚Çä - L‚Çä*Lz ‚âà L‚Çä atol=œµ rtol=œµ
                        # [Lz, L‚Çã] = -L‚Çã
                        @test Lz*L‚Çã - L‚Çã*Lz ‚âà -L‚Çã atol=œµ rtol=œµ
                        # [L‚Çä, L‚Çã] = 2Lz
                        @test L‚Çä*L‚Çã - L‚Çã*L‚Çä ‚âà 2Lz atol=œµ rtol=œµ
                    end
                    let
                        # [Rz, R‚Çä] = R‚Çä
                        @test (
                            Rz(s-1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*R‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            - R‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            ‚âà R‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) atol=œµ rtol=œµ
                        # [Rz, R‚Çã] = -R‚Çã
                        @test (
                            Rz(s+1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*R‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            - R‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            ‚âà -R‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) atol=œµ rtol=œµ
                        # [R‚Çä, R‚Çã] = 2Rz
                        @test (
                            R‚Çä(s+1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*R‚Çã(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            - R‚Çã(s-1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*R‚Çä(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            ‚âà 2Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) atol=œµ rtol=œµ
                        # [Rz, √∞] = -√∞
                        @test (
                            Rz(s+1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*√∞(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            - √∞(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            ‚âà -√∞(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) atol=œµ rtol=œµ
                        # [Rz, √∞ÃÑ] = √∞ÃÑ
                        @test (
                            Rz(s-1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*√∞ÃÑ(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            - √∞ÃÑ(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            ‚âà √∞ÃÑ(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) atol=œµ rtol=œµ
                        # [√∞, √∞ÃÑ] = 2Rz
                        @test (
                            √∞(s-1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*√∞ÃÑ(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            -√∞ÃÑ(s+1, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)*√∞(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                            ‚âà 2Rz(s, ‚Ñì‚Çò·µ¢‚Çô, ‚Ñì‚Çò‚Çê‚Çì, T)
                        ) atol=œµ rtol=œµ
                    end
                end
            end
        end
    end

end
