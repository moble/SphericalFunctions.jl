@testset verbose=true "sYlm" begin

    @testset "Test NINJA expressions ($T)" for T in [Float64, Float32, BigFloat]
        ## This is just to test my implementation of the equations give in the paper.
        ## Note that this is a test of the testing code itself, not of the main code.
        tol = 2eps(T)
        @showprogress "Test NINJA expressions ($T)" for Œπ in Œ≤range(T)
            for œï in Œ±range(T)
                @test NINJA.sYlm(-2, 2, 2, Œπ, œï) ‚âà NINJA.m2Y22(Œπ, œï) atol=tol rtol=tol
                @test NINJA.sYlm(-2, 2, 1, Œπ, œï) ‚âà NINJA.m2Y21(Œπ, œï) atol=tol rtol=tol
                @test NINJA.sYlm(-2, 2, 0, Œπ, œï) ‚âà NINJA.m2Y20(Œπ, œï) atol=tol rtol=tol
                @test NINJA.sYlm(-2, 2, -1, Œπ, œï) ‚âà NINJA.m2Y2m1(Œπ, œï) atol=tol rtol=tol
                @test NINJA.sYlm(-2, 2, -2, Œπ, œï) ‚âà NINJA.m2Y2m2(Œπ, œï) atol=tol rtol=tol
            end
        end
    end

    @testset "Compare to NINJA expressions ($T)" for T in [Float64, Float32, BigFloat]
        ‚Ñì‚Çò‚Çê‚Çì = 8
        s‚Çò‚Çê‚Çì = 2
        ‚Ñì‚Çò·µ¢‚Çô = 0
        tol = ‚Ñì‚Çò‚Çê‚Çì^2 * 2eps(T)  # Mostly because the NINJA.sYlm expressions are inaccurate
        Y, H_rec_coeffs, Hwedge, expimœï = Yprep(‚Ñì‚Çò‚Çê‚Çì, s‚Çò‚Çê‚Çì, T)

        let R = randn(Rotor{T})
            @test_throws ErrorException Y!(Y, R, ‚Ñì‚Çò‚Çê‚Çì+1, 0, H_rec_coeffs, Hwedge, expimœï)
            ‚Ñì = ‚Ñì‚Çò‚Çê‚Çì - 1
            i = WignerHsize(‚Ñì, abs(0)) - 1
            @test_throws ErrorException Y!(Y, R, ‚Ñì, 0, H_rec_coeffs, Hwedge[1:i], expimœï)
        end

        @showprogress "Compare to NINJA expressions ($T)" for spin in -s‚Çò‚Çê‚Çì:s‚Çò‚Çê‚Çì
            for Œπ in Œ≤range(T)
                for œï in Œ±range(T)
                    R = from_spherical_coordinates(Œπ, œï)
                    Y!(Y, R, ‚Ñì‚Çò‚Çê‚Çì, spin, H_rec_coeffs, Hwedge, expimœï)
                    i = 1
                    for ‚Ñì in 0:abs(spin)-1
                        for m in -‚Ñì:‚Ñì
                            @test Y[i] == 0
                            i += 1
                        end
                    end
                    for ‚Ñì in abs(spin):‚Ñì‚Çò‚Çê‚Çì
                        for m in -‚Ñì:‚Ñì
                            sYlm1 = Y[i]
                            sYlm2 = NINJA.sYlm(spin, ‚Ñì, m, Œπ, œï)
                            @test sYlm1 ‚âà sYlm2 atol=tol rtol=tol
                            i += 1
                        end
                    end
                end
            end
        end
    end

    @testset "Spin property ($T)" for T in [Float64, Float32, BigFloat]
        # Test that ‚ÇõY‚Çó‚Çò(R exp(Œ≥*z/2)) = ‚ÇõY‚Çó‚Çò(R) * exp(-im*s*Œ≥)
        # See https://spherical.readthedocs.io/en/main/SWSHs/
        # for a more detailed explanation
        ‚Ñì‚Çò‚Çê‚Çì = 8
        s‚Çò‚Çê‚Çì = 2
        ‚Ñì‚Çò·µ¢‚Çô = 0
        tol = 4‚Ñì‚Çò‚Çê‚Çì * eps(T)
        Y1, H_rec_coeffs, Hwedge, expimœï = Yprep(‚Ñì‚Çò‚Çê‚Çì, s‚Çò‚Çê‚Çì, T)
        Y2 = Ystorage(‚Ñì‚Çò‚Çê‚Çì, T)
        @showprogress "Spin property ($T)" for spin in -s‚Çò‚Çê‚Çì:s‚Çò‚Çê‚Çì
            for Œπ in Œ≤range(T)
                for œï in Œ±range(T)
                    for Œ≥ in Œ≥range(T)
                        R = from_spherical_coordinates(Œπ, œï)
                        Y!(Y1, R * exp(Œ≥*ùê§/2), ‚Ñì‚Çò‚Çê‚Çì, spin, H_rec_coeffs, Hwedge, expimœï)
                        Y!(Y2, R, ‚Ñì‚Çò‚Çê‚Çì, spin, H_rec_coeffs, Hwedge, expimœï)
                        @test Y1 ‚âà Y2 * cis(-spin*Œ≥) atol=tol rtol=tol
                    end
                end
            end
        end
    end

    @testset "sYlm vs WignerD ($T)" for T in [Float64, Float32, BigFloat]
        # ‚ÇõY‚Çó‚Çò(R) = (-1)À¢ ‚àö((2‚Ñì+1)/(4œÄ)) ùîáÀ°‚Çò‚Çã‚Çõ(R)
        #        = (-1)À¢ ‚àö((2‚Ñì+1)/(4œÄ)) ùîáÃÑÀ°‚Çã‚Çõ‚Çò(RÃÑ)
        ‚Ñì‚Çò‚Çê‚Çì = 8
        s‚Çò‚Çê‚Çì = 2
        ‚Ñì‚Çò·µ¢‚Çô = 0
        tol = 4‚Ñì‚Çò‚Çê‚Çì * eps(T)
        ùîá, _, e‚Å±·µê·µÖ, e‚Å±·µê·µû = Dprep(‚Ñì‚Çò‚Çê‚Çì, T)
        Y, H_rec_coeffs, Hwedge, expimœï = Yprep(‚Ñì‚Çò‚Çê‚Çì, s‚Çò‚Çê‚Çì, T)
        @showprogress "sYlm vs WignerD ($T)" for s in -s‚Çò‚Çê‚Çì:s‚Çò‚Çê‚Çì
            for Œπ in Œ≤range(T)
                for œï in Œ±range(T)
                    R = from_spherical_coordinates(Œπ, œï)
                    D!(ùîá, R, ‚Ñì‚Çò‚Çê‚Çì, H_rec_coeffs, e‚Å±·µê·µÖ, e‚Å±·µê·µû)
                    Y!(Y, R, ‚Ñì‚Çò‚Çê‚Çì, s, H_rec_coeffs, Hwedge, expimœï)
                    i = 1
                    for ‚Ñì in 0:abs(s)-1
                        for m in -‚Ñì:‚Ñì
                            @test Y[i] == 0
                            i += 1
                        end
                    end
                    for ‚Ñì in abs(s):‚Ñì‚Çò‚Çê‚Çì
                        for m in -‚Ñì:‚Ñì
                            sYlm1 = Y[i]
                            sYlm2 = (-1)^s * ‚àö((2‚Ñì+1)/(4T(œÄ))) * ùîá[WignerDindex(‚Ñì, m, -s)]
                            if ‚ââ(sYlm1, sYlm2, atol=tol, rtol=tol)
                                println("Unequal at i=$i (s,‚Ñì,m)=$((s,‚Ñì,m)): ")
                                @show Œπ œï
                                @show sYlm1 sYlm2
                            end
                            @test sYlm1 ‚âà sYlm2 atol=tol rtol=tol
                            i += 1
                        end
                    end
                end
            end
        end
    end

    @testset "sYlm conjugation ($T)" for T in [Float64, Float32, BigFloat]
        # ‚ÇõYÃÑ‚Çó‚Çò = (-1)À¢‚Å∫·µê ‚Çã‚ÇõY‚Çó‚Çã‚Çò
        ‚Ñì‚Çò‚Çê‚Çì = 8
        s‚Çò‚Çê‚Çì = 2
        ‚Ñì‚Çò·µ¢‚Çô = 0
        tol = 4‚Ñì‚Çò‚Çê‚Çì * eps(T)
        Y1, H_rec_coeffs, Hwedge, expimœï = Yprep(‚Ñì‚Çò‚Çê‚Çì, s‚Çò‚Çê‚Çì, T)
        Y2 = Ystorage(‚Ñì‚Çò‚Çê‚Çì, T)
        @showprogress "sYlm conjugation ($T)" for Œπ in Œ≤range(T)
            for œï in Œ±range(T)
                for Œ≥ in Œ≥range(T)
                    for s in -s‚Çò‚Çê‚Çì:s‚Çò‚Çê‚Çì
                        R = from_spherical_coordinates(Œπ, œï)
                        Y!(Y1, R, ‚Ñì‚Çò‚Çê‚Çì, s, H_rec_coeffs, Hwedge, expimœï)
                        Y!(Y2, R, ‚Ñì‚Çò‚Çê‚Çì, -s, H_rec_coeffs, Hwedge, expimœï)
                        for ‚Ñì in abs(s):‚Ñì‚Çò‚Çê‚Çì
                            for m in -‚Ñì:‚Ñì
                                sYlm1 = conj(Y1[Yindex(‚Ñì, m)])
                                sYlm2 = (-1)^(s+m) * Y2[Yindex(‚Ñì, -m)]
                                @test sYlm1 ‚âà sYlm2 atol=tol rtol=tol
                            end
                        end
                    end
                end
            end
        end
    end

end
