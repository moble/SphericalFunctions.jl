@doc raw"""
Formulas and conventions from [Wigner's "Group Theory and Its Applications to the Quantum
Mechanics of Atomic Spectra"](@cite Wigner_1959).

The conclusion here is that Wigner's ``D ≤‚Çò‚Çö,‚Çò`` includes a factor of ``(-1)^{m'-m}``
relative to ours.
"""
module Wigner

const ùíæ = im

raw"""
Figure 2 on page 59 shows that Wigner's Euler angles notated {Œ±, Œ≤, Œ≥} are simply swapped
with respect to ours.  For example, note that the position of ``z'`` is independent of Œ±,
which appears to represent a final rotation about the ``z'`` axis.  In our convention, this
rotation would be described by the final Euler angle, Œ≥.

On the other hand, on page 156, if ``ùîá^{(\ell)}`` obeys the representation-composition
property, then {Œ±, Œ≤, Œ≥} represents the rotation {Œ±, 0, 0}‚àò{0, Œ≤, 0}‚àò{0, 0, Œ≥}, which is
the same as our convention.

"""


# @doc raw"""
#     D(‚Ñì, m‚Ä≤, m, Œ±, Œ≤, Œ≥)

# Eq. (15.8) of [Wigner](@cite Wigner_1959), implementing
# ```math
#     D^\ell_{m',m}(\alpha, \beta, \gamma).
# ```
# """
# function D(‚Ñì, m‚Ä≤, m, Œ±, Œ≤, Œ≥)
#     exp(ùíæ*m‚Ä≤*Œ±) * d(‚Ñì, m‚Ä≤, m, Œ≤) * exp(ùíæ*m*Œ≥)
# end


@doc raw"""
    D(‚Ñì, m‚Ä≤, m, Œ±, Œ≤, Œ≥)

Eq. (15.27) of [Wigner](@cite Wigner_1959), implementing
```math
    D^{(j)}(\alpha, \beta, \gamma)_{\mu',\mu}.
```
"""
function D(j, Œº‚Ä≤, Œº, Œ±, Œ≤, Œ≥)
    if j < 0
        throw(DomainError("The degree j=$j must be non-negative."))
    end
    if abs(Œº‚Ä≤) > j
        throw(DomainError("The order abs(Œº‚Ä≤)=$Œº‚Ä≤ must be ‚â§ j=$j."))
    end
    if abs(Œº) > j
        throw(DomainError("The order abs(Œº)=$Œº must be ‚â§ j=$j."))
    end

    Œ±, Œ≤, Œ≥ = promote(Œ±, Œ≤, Œ≥)

    # The summation index `Œ∫` ranges over all values for which the factorial arguments are
    # valid.
    Œ∫‚Çò·µ¢‚Çô = max(0, Œº-Œº‚Ä≤)
    Œ∫‚Çò‚Çê‚Çì = min(j-Œº‚Ä≤, j+Œº)

    sinŒ≤‚ï±2, cosŒ≤‚ï±2 = sincos(Œ≤/2)
    T = typeof(sinŒ≤‚ï±2)

    sum(
        Œ∫ -> (
            (-1)^(Œ∫)
            * T(‚àö(factorial(j+Œº) * factorial(j-Œº) * factorial(j+Œº‚Ä≤) * factorial(j-Œº‚Ä≤))
                / (factorial(j-Œº‚Ä≤-Œ∫) * factorial(j+Œº-Œ∫) * factorial(Œ∫) * factorial(Œ∫+Œº‚Ä≤-Œº)))
            * exp(ùíæ*Œº‚Ä≤*Œ±) * cosŒ≤‚ï±2^(2j+Œº-Œº‚Ä≤-2Œ∫) * sinŒ≤‚ï±2^(2Œ∫+Œº‚Ä≤-Œº) * exp(ùíæ*Œº*Œ≥)
        ),
        Œ∫‚Çò·µ¢‚Çô:Œ∫‚Çò‚Çê‚Çì,
        init=zero(T)
    )
end

end # module


@testitem "Wigner conventions" setup=[Utilities] begin
    using Random
    import SphericalFunctions: Wigner
    using Quaternionic: from_spherical_coordinates

    Random.seed!(1234)
    const T = Float64
    const ‚Ñì‚Çò‚Çê‚Çì = 6
    œµ‚Çê = 2eps(T)
    œµ·µ£ = 50eps(T)

    # Tests for D(j, m‚Ä≤, m, Œ±, Œ≤, Œ≥)
    let œµ‚Çê=‚àöœµ·µ£, œµ·µ£=‚àöœµ·µ£, ùíü=Wigner.D
        for Œ± ‚àà Œ±range(T)
            for Œ≤ ‚àà Œ≤range(T)
                for Œ≥ ‚àà Œ≥range(T)
                    D = D_matrices(Œ±, Œ≤, Œ≥, ‚Ñì‚Çò‚Çê‚Çì)
                    i = 1
                    for j in 0:‚Ñì‚Çò‚Çê‚Çì
                        for m‚Ä≤ in -j:j
                            for m in -j:j
                                #@test conj(ùíü(j, -m‚Ä≤, -m, Œ±, Œ≤, Œ≥)) ‚âà D[i] atol=œµ‚Çê rtol=œµ·µ£
                                @test (-1)^(m‚Ä≤-m) * ùíü(j, m‚Ä≤, m, Œ±, Œ≤, Œ≥) ‚âà D[i] atol=œµ‚Çê rtol=œµ·µ£
                                i += 1
                            end
                        end
                    end
                end
            end
        end
    end
end
